{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","images/preloader.gif","components/Login/login.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","components/utils/helper.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/contact-reducer.js","redux/redux-store.js","components/Contacts/Contacts.jsx","components/Contacts/Contacts copy.jsx","components/utils/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/common/preloader/preloader.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/Profile copy.jsx","components/Profile/ProfileContainer.jsx","components/Shop/Shop.jsx","components/Users/Paginator.jsx","components/Users/User.jsx","components/Users/users.jsx","components/Users/users copy.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/Header container.jsx","components/Login/login.jsx","App.js","index.js","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.module.css","components/Dialogs/Dialogs.module.css","images/users.jpg","components/Users/users.module.css","components/Users/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","userId","delete","post","profileAPI","status","put","authAPI","email","password","rememberMe","initialState","message","id","newPostText","profile","profileReducer","state","action","type","newElement","postText","setUserProfile","setStatus","getProfile","dispatch","a","response","data","getStatus","dialog","name","dialogsReducer","newMessageChange","updateObjectInArray","item","itemId","objPropName","NewObjProps","map","u","followSuccess","unfollowSucces","setUsers","users","setTotalUsersCount","totalUsersCount","count","toogleIsFetching","isFetching","usersReducer","followed","SetUserAuth","login","isAuth","payload","GetUserAuth","resultCode","authReducer","initialized","appReducer","contact","contactReducer","setContact","reducers","combineReducers","postPage","dialogPage","userPage","contactPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Contacts","props","key","src","photos","small","userPhoto","className","styles","photo","onClick","unfollow","ContactsContainer","this","getContact","renderPage","React","Component","connect","items","required","value","maxLengthCreator","maxLength","length","Textarea","input","meta","hasError","touched","error","formControl","Input","DialogItem","s","active","to","MessageItem","Dialogs","memo","dialogsElement","d","messagesElement","m","dialogs","dialogItem","messages","DialogChangeForm","onSubmit","sendMessage","maxLength100","reduxForm","handleSubmit","Field","component","validate","mapStateToProps","withAuthRedirect","RedirectComponent","Navbar","nav","News","avatar","Post","MyPosts","postElement","posts","p","PostBlock","Preloader","style","backgroundColor","preloader","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","contacts","descriptionBlock","nameBlock","fullName","lookingForAJob","lookingForAJobDerscription","facebook","vk","github","website","instagram","Profile","content","PostReduxForm","addPost","profilePage","maxLength10","ProfileC","params","authorizedUserId","withRouter","ProfileContainer","Shop","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","cn","selectedPage","pageNumber","User","user","follow","Users","UsersC","getUsers","setCurrentPage","giveUsers","getPagesize","getTotalUsersCount","getCurrentPage","getIsFethcing","UsersContainer","totalCount","Header","header","loginBlock","logout","HeaderContainer","maxLength20","LoginReduxForm","placeholder","formSummaryError","Login","stopSubmit","_error","loginPage","formData","App","initializeAPP","path","render","DialogsContainer","then","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb5d2ee1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3jHHW\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.e5c5f979.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"login_loginPage__3Ly6v\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import *as axios from 'axios';\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    headers : {\r\n        'API-KEY':'82cffa2e-9f28-41f5-a762-41533df9418b'\r\n    }\r\n});\r\n\r\nexport const usersAPI = { \r\n    getUsers(currentPage = 1,pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    getProfile(userId) {\r\n       return instance.get(`profile/`+ userId)\r\n    },\r\n    unfollow (userId) {\r\n       return instance.delete(`follow/${userId}`)\r\n    },\r\n    follow (userId) {\r\n        return instance.post(`follow/${userId}`, {})\r\n    },\r\n    getContactApi(currentPage = 1,pageSize = 100) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getStatus (userId){\r\n        return instance.get(`/profile/status/` + userId)\r\n    },\r\n    updateStatus (status) {\r\n        return instance.put(`/profile/status`, {status:status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`,{\r\n            withCredentials:true })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`,{email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import { usersAPI, profileAPI } from \"../api/api\";\r\n\r\nconst Add_Post =  'Add-Post';\r\nconst set_User_Profile = 'setUserProfile';\r\nconst Set_Status = 'Set_Status';\r\n\r\nlet initialState =  {\r\n        post:[\r\n        {message:'Hello people !!!', id:1},\r\n        {message:'How are you?', id:2},\r\n        {message:' Go on' , id:3}\r\n    ],\r\n    newPostText: 'New Text',\r\n    profile:null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Add_Post: {\r\n            let newElement = {\r\n                message: action.postText,\r\n                id: '5'\r\n            };\r\n            return {\r\n                ...state,\r\n                post:[...state.post,newElement],\r\n                newPostText:''};\r\n            }\r\n        \r\n        case set_User_Profile: {\r\n            return {...state, profile:action.profile}\r\n        }\r\n        case Set_Status: {\r\n            return {...state, status:action.status}\r\n        }\r\n        default:\r\n            return state;\r\n}\r\n}\r\nexport default profileReducer;\r\n\r\nexport const setUserProfile = (profile) => ({type:set_User_Profile, profile});\r\nexport const setStatus = (status) => ({type:Set_Status, status});\r\n\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n            dispatch(setUserProfile(response.data))\r\n      }\r\n    \r\n\r\n export const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(response.data))\r\n          }\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0){\r\n            dispatch(setStatus(status))\r\n            }\r\n      }\r\n    \r\nexport const addPost = (postText) => ({type: Add_Post, postText});\r\n","const Send_Message = 'Send-Message';\r\n\r\nlet initialState = {\r\n    dialog:[\r\n    {id: '1', name:'Arthur'},\r\n    {id: '2', name:'Ruslan'},\r\n    {id: '3', name:'Vova'}\r\n    ],\r\n    message:[\r\n        {id:'1', message:'Hello Mr.'},\r\n        {id:'2', message:'Where are you from?'},\r\n        {id:'3', message:'I from OAE'}\r\n    ]\r\n};   \r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Send_Message:\r\n            let newElement = action.newMessageChange;\r\n            return {\r\n                ...state,\r\n                message: [...state.message, \r\n                         {id : 4, message: newElement}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessage = (newMessageChange) => ({type:Send_Message}, newMessageChange);\r\n\r\n","export const updateObjectInArray = (item, itemId, objPropName, NewObjProps) => {\r\n    return item.map(u => {\r\n            if (u[objPropName] === itemId) {\r\n                return {...u, ...NewObjProps}\r\n            }\r\n            return u;\r\n        })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../components/utils/helper\";\r\n\r\nconst Follow =  'Follow';\r\nconst UnFollow =  'UnFollow';\r\nconst Set_Users = 'SetUsers';\r\nconst Set_Current_Page = 'Set_Current_Page';\r\nconst Set_Total_Users_Count = 'Set_Total_Users_Count';\r\nconst Toogle_Is_Fetching = 'Toogle_Is_Fetching';\r\n\r\nexport const followSuccess = (userId) => ({type: Follow, userId});\r\nexport const unfollowSucces = (userId) => ({type: UnFollow, userId});\r\nexport const setUsers = (users) => ({type: Set_Users, users});\r\nexport const setCurrentPage = (currentPage) => ({type: Set_Current_Page, currentPage});\r\nexport const setTotalUsersCount= (totalUsersCount) => ({type: Set_Total_Users_Count, count:totalUsersCount});\r\nexport const toogleIsFetching= (isFetching) => ({type: Toogle_Is_Fetching, isFetching});\r\n\r\n\r\nexport const getUsers = (currentPage,pageSize)=> async (dispatch) => {\r\n        dispatch(toogleIsFetching(true));\r\n        let response = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(setUsers(response.data.items))\r\n            dispatch(setTotalUsersCount(response.data.totalCount))        \r\n    }\r\n\r\n\r\nexport const follow = (userId)=> async (dispatch) => {\r\n       let response = await usersAPI.follow(userId)\r\n            if (response.data.resultCode == 0) {\r\n            dispatch(followSuccess(userId))\r\n            }\r\n    }\r\n\r\n\r\nexport const unfollow = (userId)=> async (dispatch) => {\r\n    let response = await usersAPI.unfollow(userId)\r\n            if (response.data.resultCode == 0) {\r\n            dispatch(unfollowSucces(userId))\r\n            }\r\n    }\r\n\r\n    let initialState =  {\r\n        users:[],\r\n        pageSize:5,\r\n        totalUsersCount:0,\r\n        currentPage:1,\r\n        isFetching:true\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Follow: \r\n            return {\r\n                ...state, \r\n                users:updateObjectInArray(state.users,action.userId, \"id\", {followed: true})\r\n            }\r\n        case UnFollow:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case Set_Users : {\r\n            return {...state,users:action.users}\r\n        }\r\n        case Set_Current_Page : {\r\n            return {...state,currentPage:action.currentPage}\r\n        }\r\n        case Set_Total_Users_Count : {\r\n            return {...state,totalUsersCount:action.count}\r\n        }\r\n        case Toogle_Is_Fetching : {\r\n            return {...state,isFetching:action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n}\r\n}\r\n export default usersReducer;\r\n\r\n","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst Set_User_Auth =  'Set_User_Auth';\r\n\r\nexport const SetUserAuth = (userId, email , login, isAuth) => \r\n                                        ({type:Set_User_Auth , \r\n                                          payload:{userId, email, login, isAuth} });\r\n\r\nexport const GetUserAuth = () =>async ( dispatch) => {\r\n    let response = await authAPI.me()\r\n         if (response.data.resultCode === 0) {\r\n            let {id,email,login} = response.data.data;\r\n            dispatch(SetUserAuth(id, email, login, true))\r\n            }\r\n}\r\n\r\nexport const login = (email,password,rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email,password,rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(GetUserAuth());\r\n        } else {\r\n          //  let message = Response.data.messages.length > 0 ? Response.data.mesages[0]: \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error:\"message\"}));\r\n        }\r\n}\r\n\r\nexport const logout = () =>async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(SetUserAuth(null, null, null, false))\r\n        }\r\n}\r\nlet initialState =  {\r\n        userId:null,\r\n        email:null,\r\n        login:null,\r\n        isAuth: false\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Set_User_Auth: \r\n           return {\r\n               ...state,\r\n               ...action.payload,\r\n           }\r\n        default:\r\n            return state;\r\n}\r\n}\r\nexport default authReducer;\r\n\r\n","import { GetUserAuth } from \"./auth-reducer\";\r\n\r\nconst Set_Initialized =  '/app/Set_Initialized';\r\n\r\nexport const InitializedSucces = () => ({type:Set_Initialized });\r\n\r\nexport const initializeAPP = () => (dispatch)=>{\r\n    let promise = dispatch(GetUserAuth());\r\n    promise.then ( () => {\r\n        dispatch(InitializedSucces());\r\n    })\r\n}\r\nlet initialState =  {\r\n    initialized:false\r\n    }\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case Set_Initialized: \r\n           return {\r\n               ...state,\r\n               initialized:true\r\n           }\r\n        default:\r\n            return state;\r\n}\r\n}\r\nexport default appReducer;\r\n\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../components/utils/helper\";\r\n\r\n\r\nconst Friends =  'Frends';\r\nconst UnFollow =  'UnFollow';\r\n\r\nlet initialState =  {\r\n    contact:[],\r\n    pageSize:5,\r\n};\r\n\r\nconst contactReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Friends: {\r\n            return {...state, contact:action.contact}\r\n        }\r\n        case UnFollow:\r\n            return {\r\n                ...state,\r\n                contact:updateObjectInArray(state.contact, action.userId, \"id\", {followed: false})\r\n            }      \r\n        default:\r\n            return state;\r\n}\r\n}\r\nexport default contactReducer;\r\n\r\nexport const getContact = (currentPage,pageSize)=> async (dispatch) => \r\n    { //dispatch(toogleIsFetching(true));\r\n      let response = await usersAPI.getContactApi(currentPage, pageSize)\r\n            dispatch(setContact(response.data.items))\r\n    }\r\n\r\nexport const unfollow = (userId)=> async (dispatch) => {\r\n    let response = await usersAPI.unfollow(userId)\r\n            if (response.data.resultCode == 0) {\r\n            dispatch(unfollowSucces(userId))\r\n            }\r\n    }  \r\n\r\n\r\n\r\nexport const setContact = (contact) => ({type:Friends, contact});\r\nexport const unfollowSucces = (userId) => ({type: UnFollow, userId});\r\n\r\n\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\nimport contactReducer from \"./contact-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    postPage: profileReducer,\r\n    dialogPage: dialogsReducer,\r\n    userPage: usersReducer,\r\n    contactPage: contactReducer,\r\n    auth:authReducer,\r\n    form:formReducer,\r\n    app:appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport userPhoto from '../../images/users.jpg';\r\nimport styles from '../Users/users.module.css'\r\n\r\n\r\nconst Contacts = (props) => {\r\n  debugger\r\n  return (\r\n   <div>\r\n      Friends\r\n        {props.contact.map(u => <div key={u.id}>\r\n           <div>\r\n           {u.followed ? \r\n            <span>\r\n            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.photo}/>\r\n            {u.status}\r\n            {u.name}\r\n            <button onClick={() => {props.unfollow(u.id)} } > UnFollow</button>\r\n            </span> : null}\r\n            \r\n            </div>\r\n        </div>)}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getContact} from '../../redux/contact-reducer'\r\nimport Contacts from './Contacts';\r\nimport {unfollow} from '../../redux/contact-reducer'\r\n\r\nclass ContactsContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getContact()\r\n  }\r\n\r\n  render () {\r\n  return (\r\n  <>\r\n    <Contacts contact={this.props.contact} unfollow={this.props.unfollow} users={this.props.users} renderPage={this.props.renderPage}/>\r\n  </>\r\n  )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    contact:state.contactPage.contact,\r\n    users:state.userPage.users,\r\n}\r\n}\r\nexport default connect (mapStateToProps,{getContact, unfollow})(ContactsContainer);","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is requred\"\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({input,meta,...props}) => {\r\n    const hasError = meta.touched && meta.error \r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: \"\")}>\r\n           <div> \r\n               <textarea {...input} {...props} />\r\n            </div>\r\n    { hasError && <span>{meta.error}</span>}\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport const Input = ({input,meta,...props}) => {\r\n    const hasError = meta.touched && meta.error \r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: \"\")}>\r\n           <div> \r\n               <input {...input} {...props} />\r\n            </div>\r\n    { hasError && <span>{meta.error}</span>}\r\n        </div> \r\n    )\r\n}","import React, { memo } from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../utils/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n                    <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n                </div>\r\n    )\r\n}\r\n\r\nconst MessageItem = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n} \r\n\r\nconst Dialogs = React.memo(props => {\r\n    let dialogsElement = props.dialogPage.dialog.map (d => (<DialogItem name= {d.name} id ={d.id}/>)); \r\n    let messagesElement =props.dialogPage.message.map(m =>(<MessageItem message = {m.message} id ={m.id} />));\r\n    \r\n    // let onSendMessage = () => {\r\n    //     props.sendMessage();\r\n    //     newMessageArea.current.value ='';\r\n    // }\r\n    // let onMessageChange = (e) => {\r\n    //     let body = e.target.value;\r\n    //     props.updateNewMessage(body);\r\n    // }\r\n    let newMessage = (value) => { \r\n        props.sendMessage(value.newMessageChange);\r\n       // alert ('gggg')\r\n     }\r\n  \r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItem}>\r\n            {dialogsElement}                \r\n            </div>\r\n            <div className={s.messages}>\r\n               {messagesElement}\r\n               <DialogChangeForm onSubmit={newMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\nexport default Dialogs;\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst DialogChange = (props) =>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n            <Field component={Textarea} name=\"newMessageChange\" validate={[required, maxLength100]}/> \r\n            </div>\r\n               <div>\r\n                   <button > Send Message</button>\r\n                   </div>\r\n        </form>\r\n    )\r\n}\r\nconst DialogChangeForm = reduxForm({form:'dialogChangeForm'})(DialogChange);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.auth.isAuth\r\n    }\r\n}\r\nconst withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to ={'/login'}/>\r\n            return  <Component {...this.props}/> \r\n        }\r\n}\r\nlet ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\nreturn ConnectedRedirectComponent;\r\n}\r\nexport default  withAuthRedirect;","import { sendMessage } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =  (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageChange)=> {\r\n            dispatch(sendMessage(newMessageChange))\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to = \"/profile\">Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to = \"/dialogs\">Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to = \"/news\"> News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to = \"/shop\">Shop</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to =\"/contacts\">Contacts</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to =\"/users\">Users</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst News = (props) => {\r\n  return <div>\r\n    News\r\n  </div>\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Post.module.css';\r\nexport const avatar = 'https://avatars.mds.yandex.net/get-pdb/2380153/0e1c935d-ed42-4c9f-b101-d790b95d737c/s1200'\r\nconst Post = (props) => {\r\n  return <div>\r\n    <div className={s.item}>\r\n      <img src = {avatar}/>\r\n       {props.message}\r\n          <div>  \r\n          <span>like</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n \r\n  let postElement = props.posts.map(p => <Post message={p.message} />) ;\r\n  return (\r\n    <div>\r\n      <div className={s.PostBlock}>\r\n        <h2>My posts</h2>\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postElement}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\nexport default MyPosts;","import preloader from '../../../images/preloader.gif';\r\nimport React from 'react';\r\n\r\nlet Preloader = (props) => {\r\n    return <div style = {{backgroundColor:'white'}}> <img src ={preloader}/> \r\n    </div>\r\n    \r\n}\r\n\r\nexport default Preloader;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState (false);\r\n    let [status, setStatus] = useState (props.status);\r\n\r\n    useEffect ( () => {\r\n        setStatus(props.status);\r\n    } , [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode} > \r\n                              {props.status}</span>\r\n                    </div>\r\n                 }\r\n                { editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} \r\n                        autoFocus={true} onBlur={deactivateEditMode}\r\n                        value={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  const contacts = props.profile.contacts;\r\n  return (\r\n    <div>\r\n      <div><img src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350' /></div>\r\n      <div className={s.descriptionBlock}><img src={props.profile.photos.small} /></div>\r\n      <div className={s.nameBlock}> {props.profile.fullName}</div>\r\n      <div>{props.profile.lookingForAJob = true ? props.profile.lookingForAJobDerscription : null}</div>    \r\n      <div>{contacts.facebook}</div>  \r\n      <div>{contacts.vk}</div>\r\n      <div>{contacts.github}</div>\r\n      <div>{contacts.website}</div>\r\n      <div>{contacts.instagram}</div>  \r\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React, { memo } from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../utils/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst Profile = React.memo(props => {\r\n  \r\n  let addNewPost = (value) => {\r\n    props.addPost(value.postText);\r\n  }\r\n  \r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <PostReduxForm onSubmit={addNewPost}/>\r\n      <div>\r\n        <MyPosts posts={props.profilePage.post} />\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst PostChange = (props)=>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={\"postText\"} validate={[required , maxLength10]}/> \r\n      </div>\r\n      <div>\r\n      <button>Add Post </button>\r\n    </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form:'postTextForm'})(PostChange)\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile, setStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { compose } from 'redux';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\n\r\n\r\nclass ProfileC extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n   }\r\n\r\n  render() \r\n  {\r\n    return (\r\n      <>\r\n        <Profile {...this.props} \r\n                 profile={this.props.profile} \r\n                 status={this.props.status} \r\n                 updateStatus={this.props.updateStatus}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.postPage.profile,\r\n    status:state.postPage.status,\r\n    isAuth:state.auth.isAuth\r\n})\r\nexport default compose(\r\n  connect(mapStateToProps, { setUserProfile, getProfile, getStatus, updateStatus, setStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n )(ProfileC);\r\n","import { addPost, UpdateNewPostText } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport ProfileC from './Profile copy';\r\nimport { getProfile, setStatus, getStatus  } from '../../redux/profile-reducer';\r\nimport updateStatus from '../../redux/profile-reducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return { \r\n    profilePage:state.postPage,\r\n    status:state.postPage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth:state.auth.isAuth   \r\n}\r\n};\r\n\r\n\r\nconst ProfileContainer = connect(mapStateToProps,{addPost,getProfile, getStatus, updateStatus, setStatus})(ProfileC);\r\n\r\nexport default ProfileContainer;","import React from 'react';\r\n\r\nconst Shop = (props) => {\r\n  return <div>\r\n    Shop\r\n  </div>\r\n}\r\nexport default Shop;","import React from 'react';\r\nimport styles from './Paginator.module.css'\r\nimport { useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({pageSize,currentPage, onPageChanged, totalUsersCount, portionSize = 30}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            { portionNumber > 1 && \r\n            <button onClick={ () => {setPortionNumber(portionNumber - 1)}}>PREV</button> }\r\n            \r\n            {pages\r\n                .filter (p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={cn ({\r\n                        [styles.selectedPage]: currentPage === p},\r\n                        styles.pageNumber)}\r\n                        key={p}\r\n                        onClick={(e) => { onPageChanged(p) }}>{p} </span>\r\n                })\r\n            }\r\n            {portionCount > portionNumber && \r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div >\r\n    )\r\n}\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './users.module.css'\r\nimport userPhoto from '../../images/users.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nlet User = ({ user, follow, unfollow }) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div><NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.photo} />\r\n                </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}> UnFollow</button>\r\n                        : <button onClick={() => {\r\n                            follow(user.id)\r\n                        }}> Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'u.location.country'}</div>\r\n                    <div>{'u.location.city'}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\nexport default User;","import React from 'react';\r\nimport Paginator from './Paginator';\r\nimport User from './User';\r\n\r\n\r\nlet Users = ({currentPage,onPageChanged, totalUsersCount, pageSize, ...props}) => {\r\n    \r\n    return (\r\n        <div>\r\n        <Paginator  currentPage={currentPage} \r\n                    onPageChanged={onPageChanged} \r\n                    totalUsersCount={totalUsersCount}\r\n                    pageSize={pageSize}/>\r\n            {\r\n                props.users.map(u => <User  user={u}\r\n                                            unfollow={props.unfollow}\r\n                                            follow={props.follow}\r\n                                            key={u.id} />)\r\n            }\r\n        </div >)\r\n\r\n}\r\nexport default Users;","import React from 'react';\r\nimport Users from './users';\r\nimport Preloader from '../common/preloader/preloader';\r\n\r\nclass UsersC extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage,this.props.pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber,this.props.pageSize);\r\n        this.props.setCurrentPage(pageNumber);\r\n        // this.props.toogleIsFetching(true);\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        // .then(data => {\r\n        // this.props.toogleIsFetching(false);\r\n        // this.props.setUsers(data.items);\r\n        // });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            {!this.props.isFetching ? <Preloader/> : null}\r\n                <Users \r\n                currentPage = {this.props.currentPage}\r\n                users = {this.props.users}\r\n                pageSize = {this.props.pageSize}\r\n                totalUsersCount = {this.props.totalUsersCount}\r\n                follow = {this.props.follow}\r\n                unfollow = {this.props.unfollow}\r\n                onPageChanged = {this.onPageChanged}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default UsersC;\r\n// npm install gh-pages --save -dev","export const giveUsers = (state) => {\r\n    return state.userPage.users\r\n}\r\n\r\nexport const getPagesize = (state) => {\r\n    return state.userPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.userPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.userPage.currentPage\r\n}\r\n\r\nexport const getIsFethcing = (state) => {\r\n    return state.userPage.isFetching\r\n}","import { connect } from 'react-redux';\r\nimport UsersC from './users copy';\r\nimport { follow, unfollow, setUsers, setCurrentPage, \r\nsetTotalUsersCount, toogleIsFetching, getUsers } from '../../redux/users-reducer';\r\nimport { giveUsers, getPagesize, getTotalUsersCount, \r\n    getCurrentPage, getIsFethcing } from '../../redux/users-selectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users:giveUsers(state),\r\n        pageSize:getPagesize(state),\r\n        totalUsersCount:getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching:getIsFethcing(state)\r\n    }\r\n}\r\n\r\n\r\nconst UsersContainer = connect(mapStateToProps,{follow,unfollow,setUsers,setCurrentPage,\r\n    setTotalUsersCount,toogleIsFetching, getUsers})(UsersC);\r\nexport default UsersContainer;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { avatar } from '../Profile/MyPosts/Post/Post';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n              <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png'/>     \r\n              <div className = {s.loginBlock}>\r\n                 <img src ={avatar}/> \r\n                    { props.isAuth \r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out </button> </div>\r\n                     :<NavLink to = {'/login'}>Login</NavLink>}\r\n               </div>\r\n           </header>\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport {logout} from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n   \r\n    render(){\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login\r\n})\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport s from './login.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../utils/validators';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from '../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\n\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst LoginForm = (props) => {\r\n    \r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required,maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required,maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={'input'} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n           {props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginPage = (props) => {\r\n    let newData = (formData)=>{\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return ( <div>\r\n        <h1 className ={s.loginPage}>Login</h1>\r\n         <LoginReduxForm onSubmit={newData}/>\r\n        </div>\r\n        )\r\n}\r\n\r\nlet mapStateToProps = (state) =>({\r\n    isAuth:state.auth.isAuth\r\n})\r\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm);\r\nexport const Login = connect(mapStateToProps, {login})(LoginPage);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport './App.css';\r\nimport ContactsContainer from './components/Contacts/Contacts copy';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport Shop from './components/Shop/Shop';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/Header container';\r\nimport { Login } from './components/Login/login';\r\nimport { Component } from 'react';\r\nimport {initializeAPP} from './redux/app-reducer';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from './components/common/preloader/preloader';\r\n\r\nclass App extends Component {\r\n     componentDidMount(){\r\n      this.props.initializeAPP();\r\n    }\r\n\r\n    render () {\r\n      if (!this.props.initialized){\r\n        return <Preloader/>\r\n      }\r\n      return (\r\n          <div className='app-wrapper'>\r\n            <HeaderContainer />\r\n            <Navbar />\r\n            <div className='app-wrapper-content'>\r\n              <Route path = '/dialogs'render= {() => <DialogsContainer  />} />\r\n              <Route path ='/profile/:userId?'\r\n              render = {() => <ProfileContainer/>} />\r\n              <Route path ='/users'render = {() => <UsersContainer  />} />\r\n              <Route path ='/news'component={News} />\r\n              <Route path ='/login'render = {() => <Login />} />\r\n              <Route path ='/shop'component={Shop} />\r\n              <Route path ='/contacts'render = {() => <ContactsContainer />} />\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n const mapStateToProps = (state) => ({\r\n    initialized:state.app.initialized\r\n })  \r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {initializeAPP})) (App);","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n        <BrowserRouter>\r\n        <Provider store = {store}>\r\n        <App  /> \r\n        </Provider>\r\n</BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__180Wp\",\"item\":\"Navbar_item__3TZA1\",\"active\":\"Navbar_active__1S1Y7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__S4NkW\",\"error\":\"FormsControls_error__3GkbR\",\"formSummaryError\":\"FormsControls_formSummaryError__3ki_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__ir03r\",\"dialogItem\":\"Dialogs_dialogItem__2UZ3y\",\"DialogItem\":\"Dialogs_DialogItem__2KCPy\",\"active\":\"Dialogs_active__29mGj\",\"messages\":\"Dialogs_messages__3AlWg\",\"message\":\"Dialogs_message__qUnQB\"};","module.exports = __webpack_public_path__ + \"static/media/users.b7f276c5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"users_photo__3sOcJ\",\"selectedPage\":\"users_selectedPage__2CaVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1oCTc\",\"pageNumber\":\"Paginator_pageNumber__Y7o1J\",\"selectedPage\":\"Paginator_selectedPage__1_FYG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostBlock\":\"MyPosts_PostBlock__13HRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__uc5qa\",\"nameBlock\":\"ProfileInfo_nameBlock__8enZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2H5cc\",\"loginBlock\":\"Header_loginBlock__2OUW0\"};"],"sourceRoot":""}